kind: Service
apiVersion: v1
metadata:
  name: csi-lvmplugin
  labels:
    app: csi-lvmplugin
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    app: csi-lvmplugin
  ports:
    - name: dummy
      port: 12345
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: csi-lvmplugin
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: csi-lvmplugin
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: csi-lvmplugin
    spec:
      serviceAccountName: csi-lvmplugin
      containers:
      - args:
        - --v=5
        - --csi-address=/csi/csi.sock
        - --kubelet-registration-path={{ .Values.kubernetes.kubeletPath }}/plugins/{{ .Values.lvm.storageClassStub }}/csi.sock
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v1.3.0
        imagePullPolicy: IfNotPresent
        name: node-driver-registrar
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
        - mountPath: /registration
          name: registration-dir
      - args:
        - --drivername={{ .Values.lvm.driverName }}
        - --endpoint=$(CSI_ENDPOINT)
        - --devices=$(CSI_DEVICESPATTERN)
        - --nodeid=$(KUBE_NODE_NAME)
        - --vgname=$(CSI_VGNAME)
        - --namespace=$(CSI_NAMESPACE)
        - --provisionerimage=$(CSI_PROVISIONER_IMAGE)
        - --pullpolicy=$(CSI_PULL_POLICY)
        env:
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CSI_DEVICESPATTERN
          value: {{ .Values.lvm.devicePattern }}
        - name: CSI_VGNAME
          value: {{ .Values.lvm.vgName }}
        - name: CSI_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: CSI_PROVISIONER_IMAGE
          value: "{{ .Values.provisionerImage.repository }}:{{ .Values.provisionerImage.tag }}"
        - name: CSI_PULL_POLICY
          value: {{ .Values.provisionerImage.pullPolicy }}
        image: "{{ .Values.pluginImage.repository }}:{{ .Values.pluginImage.tag }}"
        imagePullPolicy: {{ .Values.pluginImage.pullPolicy }}
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 3
        name: lvm
        ports:
        - containerPort: 9898
          name: healthz
          protocol: TCP
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /termination.log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
        - mountPath: {{ .Values.kubernetes.kubeletPath }}/pods
          mountPropagation: Bidirectional
          name: mountpoint-dir
        - mountPath: {{ .Values.kubernetes.kubeletPath }}/plugins
          mountPropagation: Bidirectional
          name: plugins-dir
        - mountPath: /dev
          name: dev-dir
          mountPropagation: Bidirectional
        - mountPath: /lib/modules
          name: mod-dir
        - mountPath: /etc/lvm/backup
          name: lvmbackup
          mountPropagation: Bidirectional
        - mountPath: /etc/lvm/cache
          name: lvmcache
          mountPropagation: Bidirectional
        - mountPath: /run/lock/lvm
          name: lvmlock
          mountPropagation: Bidirectional
      - args:
        - --csi-address=/csi/csi.sock
        - --health-port=9898
        image: k8s.gcr.io/sig-storage/livenessprobe:v2.2.0
        imagePullPolicy: IfNotPresent
        name: liveness-probe
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: {{ .Values.kubernetes.kubeletPath }}/plugins/{{ .Values.lvm.storageClassStub }}
          type: DirectoryOrCreate
        name: socket-dir
      - hostPath:
          path: {{ .Values.kubernetes.kubeletPath }}/pods
          type: DirectoryOrCreate
        name: mountpoint-dir
      - hostPath:
          path: {{ .Values.kubernetes.kubeletPath }}/plugins_registry
          type: Directory
        name: registration-dir
      - hostPath:
          path: {{ .Values.kubernetes.kubeletPath }}/plugins
          type: Directory
        name: plugins-dir
      - hostPath:
          path: /dev
          type: Directory
        name: dev-dir
      - hostPath:
          path: /lib/modules
        name: mod-dir
      - hostPath:
          path: /etc/lvm/backup
          type: DirectoryOrCreate
        name: lvmbackup
      - hostPath:
          path: /etc/lvm/cache
          type: DirectoryOrCreate
        name: lvmcache
      - hostPath:
          path: /run/lock/lvm
          type: DirectoryOrCreate
        name: lvmlock
